pipeline {
    agent any
    parameters {        
        string(
            name: 'BUCKET',
            description: 'gcs bucket',
            defaultValue: params.BUCKET ?: "gcs"
        )
        string(
            name: 'PATH',
            description: 'execution file path',
            defaultValue: params.PATH ?: "gcs"
        )
        string(
            name: 'ENV',
            description: 'ennvironment',
            defaultValue: params.ENNV ?: "dev"
        )
        string(
            name: 'PROJECT_ID',
            description: 'project',
            defaultValue: params.PROJECT_ID ?: "dev-datalake"
        )
    }
    environment {

        GOOGLE_APPLICATION_CREDENTIALS = credentials("g_key")
        
    }
    stages {
        stage('Build env') {
            steps {
                script {
                    switch(params.ENV) {
                        case 'dev':                           
                            GCP_PROJECT_ID = params.PROJECT_ID                            
                            break
                        case 'stg':
                            GCP_PROJECT_ID = params.PROJECT_ID                            
                            break
                        default:
                            GCP_PROJECT_ID = params.PROJECT_ID       
                    }
                    withEnv(['PATH+EXTRA=/usr/sbin:/usr/bin:/sbin:/bin']) {
                    sh """
                    pip3 install --upgrade google-cloud-storage
                    pip3 install click
                    pip3 install six
                    """
                }  
                }
            }
        }
        stage('Validate') {
            steps {      
                withEnv(['PATH+EXTRA=/usr/sbin:/usr/bin:/sbin:/bin']) {
                    sh """
                    echo "${GCP_PROJECT_ID}"
                    echo "${params.PATH}"
                    python3 test.py ${params.PATH} ${GCP_PROJECT_ID}
                    python3 test.py --env ${params.ENV} --gcp-project-id ${GCP_PROJECT_ID} --gcs-bucket ${params.BUCKET}  --execution-order-file ${params.PATH} --dry-run True
                    """
                }        
            }
        }
        stage('Approval') {
            // no agent, so executors are not used up when waiting for approvals
            agent none
            steps {
                script {
                    input "Continue?"
                    echo 'Yes..'
                }
            }
        }
        stage('Execute') {
            steps {      
                withEnv(['PATH+EXTRA=/usr/sbin:/usr/bin:/sbin:/bin']) {
                    sh """
                    echo "execute"
                    """
                }        
            }
        }
    }
}
